//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: global_admin.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `GlobalAdmin_GlobalAdminClient`, then call methods of this protocol to make API calls.
public protocol GlobalAdmin_GlobalAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? { get }

  func getAccounts(
    _ request: GlobalAdmin__GetAccountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse>

  func getInvitationsForUser(
    _ request: GlobalAdmin__GetInvitationsForUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse>

  func getAccountSessionToken(
    _ request: GlobalAdmin__GetAccountSessionTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse>

  func removeMember(
    _ request: GlobalAdmin__RemoveMemberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse>

  func listMembers(
    _ request: GlobalAdmin__ListMembersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse>

  func getEndpointsForAccount(
    _ request: GlobalAdmin__GetEndpointsForAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse>

  func setAccountName(
    _ request: GlobalAdmin__SetAccountNameRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse>

  func inviteMember(
    _ request: GlobalAdmin__InviteMemberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse>

  func acceptInvitation(
    _ request: GlobalAdmin__AcceptInvitationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse>

  func rejectInvitation(
    _ request: GlobalAdmin__RejectInvitationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse>

  func listInvitationsForAccount(
    _ request: GlobalAdmin__ListInvitationsForAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse>

  func revokeInvitation(
    _ request: GlobalAdmin__RevokeInvitationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse>
}

extension GlobalAdmin_GlobalAdminClientProtocol {
  public var serviceName: String {
    return "global_admin.GlobalAdmin"
  }

  /// Unary call to GetAccounts
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccounts(
    _ request: GlobalAdmin__GetAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountsInterceptors() ?? []
    )
  }

  /// Unary call to GetInvitationsForUser
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInvitationsForUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInvitationsForUser(
    _ request: GlobalAdmin__GetInvitationsForUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getInvitationsForUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInvitationsForUserInterceptors() ?? []
    )
  }

  /// Unary call to GetAccountSessionToken
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountSessionToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountSessionToken(
    _ request: GlobalAdmin__GetAccountSessionTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccountSessionToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountSessionTokenInterceptors() ?? []
    )
  }

  /// Unary call to RemoveMember
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveMember.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeMember(
    _ request: GlobalAdmin__RemoveMemberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.removeMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveMemberInterceptors() ?? []
    )
  }

  /// Unary call to ListMembers
  ///
  /// - Parameters:
  ///   - request: Request to send to ListMembers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listMembers(
    _ request: GlobalAdmin__ListMembersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMembersInterceptors() ?? []
    )
  }

  /// Unary call to GetEndpointsForAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEndpointsForAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEndpointsForAccount(
    _ request: GlobalAdmin__GetEndpointsForAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getEndpointsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEndpointsForAccountInterceptors() ?? []
    )
  }

  /// Unary call to SetAccountName
  ///
  /// - Parameters:
  ///   - request: Request to send to SetAccountName.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setAccountName(
    _ request: GlobalAdmin__SetAccountNameRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.setAccountName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccountNameInterceptors() ?? []
    )
  }

  /// Unary call to InviteMember
  ///
  /// - Parameters:
  ///   - request: Request to send to InviteMember.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func inviteMember(
    _ request: GlobalAdmin__InviteMemberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.inviteMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInviteMemberInterceptors() ?? []
    )
  }

  /// Unary call to AcceptInvitation
  ///
  /// - Parameters:
  ///   - request: Request to send to AcceptInvitation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func acceptInvitation(
    _ request: GlobalAdmin__AcceptInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.acceptInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcceptInvitationInterceptors() ?? []
    )
  }

  /// Unary call to RejectInvitation
  ///
  /// - Parameters:
  ///   - request: Request to send to RejectInvitation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func rejectInvitation(
    _ request: GlobalAdmin__RejectInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.rejectInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRejectInvitationInterceptors() ?? []
    )
  }

  /// Unary call to ListInvitationsForAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to ListInvitationsForAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listInvitationsForAccount(
    _ request: GlobalAdmin__ListInvitationsForAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listInvitationsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListInvitationsForAccountInterceptors() ?? []
    )
  }

  /// Unary call to RevokeInvitation
  ///
  /// - Parameters:
  ///   - request: Request to send to RevokeInvitation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func revokeInvitation(
    _ request: GlobalAdmin__RevokeInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse> {
    return self.makeUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.revokeInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeInvitationInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension GlobalAdmin_GlobalAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "GlobalAdmin_GlobalAdminNIOClient")
public final class GlobalAdmin_GlobalAdminClient: GlobalAdmin_GlobalAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the global_admin.GlobalAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct GlobalAdmin_GlobalAdminNIOClient: GlobalAdmin_GlobalAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the global_admin.GlobalAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol GlobalAdmin_GlobalAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? { get }

  func makeGetAccountsCall(
    _ request: GlobalAdmin__GetAccountsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse>

  func makeGetInvitationsForUserCall(
    _ request: GlobalAdmin__GetInvitationsForUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse>

  func makeGetAccountSessionTokenCall(
    _ request: GlobalAdmin__GetAccountSessionTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse>

  func makeRemoveMemberCall(
    _ request: GlobalAdmin__RemoveMemberRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse>

  func makeListMembersCall(
    _ request: GlobalAdmin__ListMembersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse>

  func makeGetEndpointsForAccountCall(
    _ request: GlobalAdmin__GetEndpointsForAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse>

  func makeSetAccountNameCall(
    _ request: GlobalAdmin__SetAccountNameRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse>

  func makeInviteMemberCall(
    _ request: GlobalAdmin__InviteMemberRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse>

  func makeAcceptInvitationCall(
    _ request: GlobalAdmin__AcceptInvitationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse>

  func makeRejectInvitationCall(
    _ request: GlobalAdmin__RejectInvitationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse>

  func makeListInvitationsForAccountCall(
    _ request: GlobalAdmin__ListInvitationsForAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse>

  func makeRevokeInvitationCall(
    _ request: GlobalAdmin__RevokeInvitationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension GlobalAdmin_GlobalAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return GlobalAdmin_GlobalAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetAccountsCall(
    _ request: GlobalAdmin__GetAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountsInterceptors() ?? []
    )
  }

  public func makeGetInvitationsForUserCall(
    _ request: GlobalAdmin__GetInvitationsForUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getInvitationsForUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInvitationsForUserInterceptors() ?? []
    )
  }

  public func makeGetAccountSessionTokenCall(
    _ request: GlobalAdmin__GetAccountSessionTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccountSessionToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountSessionTokenInterceptors() ?? []
    )
  }

  public func makeRemoveMemberCall(
    _ request: GlobalAdmin__RemoveMemberRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.removeMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveMemberInterceptors() ?? []
    )
  }

  public func makeListMembersCall(
    _ request: GlobalAdmin__ListMembersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMembersInterceptors() ?? []
    )
  }

  public func makeGetEndpointsForAccountCall(
    _ request: GlobalAdmin__GetEndpointsForAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getEndpointsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEndpointsForAccountInterceptors() ?? []
    )
  }

  public func makeSetAccountNameCall(
    _ request: GlobalAdmin__SetAccountNameRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.setAccountName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccountNameInterceptors() ?? []
    )
  }

  public func makeInviteMemberCall(
    _ request: GlobalAdmin__InviteMemberRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.inviteMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInviteMemberInterceptors() ?? []
    )
  }

  public func makeAcceptInvitationCall(
    _ request: GlobalAdmin__AcceptInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.acceptInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcceptInvitationInterceptors() ?? []
    )
  }

  public func makeRejectInvitationCall(
    _ request: GlobalAdmin__RejectInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.rejectInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRejectInvitationInterceptors() ?? []
    )
  }

  public func makeListInvitationsForAccountCall(
    _ request: GlobalAdmin__ListInvitationsForAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listInvitationsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListInvitationsForAccountInterceptors() ?? []
    )
  }

  public func makeRevokeInvitationCall(
    _ request: GlobalAdmin__RevokeInvitationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse> {
    return self.makeAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.revokeInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeInvitationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension GlobalAdmin_GlobalAdminAsyncClientProtocol {
  public func getAccounts(
    _ request: GlobalAdmin__GetAccountsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__GetAccountsResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountsInterceptors() ?? []
    )
  }

  public func getInvitationsForUser(
    _ request: GlobalAdmin__GetInvitationsForUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__GetInvitationsForUserResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getInvitationsForUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInvitationsForUserInterceptors() ?? []
    )
  }

  public func getAccountSessionToken(
    _ request: GlobalAdmin__GetAccountSessionTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__GetAccountSessionTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccountSessionToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountSessionTokenInterceptors() ?? []
    )
  }

  public func removeMember(
    _ request: GlobalAdmin__RemoveMemberRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__RemoveMemberResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.removeMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveMemberInterceptors() ?? []
    )
  }

  public func listMembers(
    _ request: GlobalAdmin__ListMembersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__ListMembersResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listMembers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMembersInterceptors() ?? []
    )
  }

  public func getEndpointsForAccount(
    _ request: GlobalAdmin__GetEndpointsForAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__GetEndpointsForAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.getEndpointsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEndpointsForAccountInterceptors() ?? []
    )
  }

  public func setAccountName(
    _ request: GlobalAdmin__SetAccountNameRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__SetAccountNameResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.setAccountName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccountNameInterceptors() ?? []
    )
  }

  public func inviteMember(
    _ request: GlobalAdmin__InviteMemberRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__InviteMemberResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.inviteMember.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInviteMemberInterceptors() ?? []
    )
  }

  public func acceptInvitation(
    _ request: GlobalAdmin__AcceptInvitationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__AcceptInvitationResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.acceptInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcceptInvitationInterceptors() ?? []
    )
  }

  public func rejectInvitation(
    _ request: GlobalAdmin__RejectInvitationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__RejectInvitationResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.rejectInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRejectInvitationInterceptors() ?? []
    )
  }

  public func listInvitationsForAccount(
    _ request: GlobalAdmin__ListInvitationsForAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__ListInvitationsForAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.listInvitationsForAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListInvitationsForAccountInterceptors() ?? []
    )
  }

  public func revokeInvitation(
    _ request: GlobalAdmin__RevokeInvitationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> GlobalAdmin__RevokeInvitationResponse {
    return try await self.performAsyncUnaryCall(
      path: GlobalAdmin_GlobalAdminClientMetadata.Methods.revokeInvitation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeInvitationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct GlobalAdmin_GlobalAdminAsyncClient: GlobalAdmin_GlobalAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol GlobalAdmin_GlobalAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getAccounts'.
  func makeGetAccountsInterceptors() -> [ClientInterceptor<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse>]

  /// - Returns: Interceptors to use when invoking 'getInvitationsForUser'.
  func makeGetInvitationsForUserInterceptors() -> [ClientInterceptor<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountSessionToken'.
  func makeGetAccountSessionTokenInterceptors() -> [ClientInterceptor<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'removeMember'.
  func makeRemoveMemberInterceptors() -> [ClientInterceptor<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse>]

  /// - Returns: Interceptors to use when invoking 'listMembers'.
  func makeListMembersInterceptors() -> [ClientInterceptor<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse>]

  /// - Returns: Interceptors to use when invoking 'getEndpointsForAccount'.
  func makeGetEndpointsForAccountInterceptors() -> [ClientInterceptor<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'setAccountName'.
  func makeSetAccountNameInterceptors() -> [ClientInterceptor<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse>]

  /// - Returns: Interceptors to use when invoking 'inviteMember'.
  func makeInviteMemberInterceptors() -> [ClientInterceptor<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse>]

  /// - Returns: Interceptors to use when invoking 'acceptInvitation'.
  func makeAcceptInvitationInterceptors() -> [ClientInterceptor<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse>]

  /// - Returns: Interceptors to use when invoking 'rejectInvitation'.
  func makeRejectInvitationInterceptors() -> [ClientInterceptor<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse>]

  /// - Returns: Interceptors to use when invoking 'listInvitationsForAccount'.
  func makeListInvitationsForAccountInterceptors() -> [ClientInterceptor<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'revokeInvitation'.
  func makeRevokeInvitationInterceptors() -> [ClientInterceptor<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse>]
}

public enum GlobalAdmin_GlobalAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "GlobalAdmin",
    fullName: "global_admin.GlobalAdmin",
    methods: [
      GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccounts,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.getInvitationsForUser,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.getAccountSessionToken,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.removeMember,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.listMembers,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.getEndpointsForAccount,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.setAccountName,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.inviteMember,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.acceptInvitation,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.rejectInvitation,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.listInvitationsForAccount,
      GlobalAdmin_GlobalAdminClientMetadata.Methods.revokeInvitation,
    ]
  )

  public enum Methods {
    public static let getAccounts = GRPCMethodDescriptor(
      name: "GetAccounts",
      path: "/global_admin.GlobalAdmin/GetAccounts",
      type: GRPCCallType.unary
    )

    public static let getInvitationsForUser = GRPCMethodDescriptor(
      name: "GetInvitationsForUser",
      path: "/global_admin.GlobalAdmin/GetInvitationsForUser",
      type: GRPCCallType.unary
    )

    public static let getAccountSessionToken = GRPCMethodDescriptor(
      name: "GetAccountSessionToken",
      path: "/global_admin.GlobalAdmin/GetAccountSessionToken",
      type: GRPCCallType.unary
    )

    public static let removeMember = GRPCMethodDescriptor(
      name: "RemoveMember",
      path: "/global_admin.GlobalAdmin/RemoveMember",
      type: GRPCCallType.unary
    )

    public static let listMembers = GRPCMethodDescriptor(
      name: "ListMembers",
      path: "/global_admin.GlobalAdmin/ListMembers",
      type: GRPCCallType.unary
    )

    public static let getEndpointsForAccount = GRPCMethodDescriptor(
      name: "GetEndpointsForAccount",
      path: "/global_admin.GlobalAdmin/GetEndpointsForAccount",
      type: GRPCCallType.unary
    )

    public static let setAccountName = GRPCMethodDescriptor(
      name: "SetAccountName",
      path: "/global_admin.GlobalAdmin/SetAccountName",
      type: GRPCCallType.unary
    )

    public static let inviteMember = GRPCMethodDescriptor(
      name: "InviteMember",
      path: "/global_admin.GlobalAdmin/InviteMember",
      type: GRPCCallType.unary
    )

    public static let acceptInvitation = GRPCMethodDescriptor(
      name: "AcceptInvitation",
      path: "/global_admin.GlobalAdmin/AcceptInvitation",
      type: GRPCCallType.unary
    )

    public static let rejectInvitation = GRPCMethodDescriptor(
      name: "RejectInvitation",
      path: "/global_admin.GlobalAdmin/RejectInvitation",
      type: GRPCCallType.unary
    )

    public static let listInvitationsForAccount = GRPCMethodDescriptor(
      name: "ListInvitationsForAccount",
      path: "/global_admin.GlobalAdmin/ListInvitationsForAccount",
      type: GRPCCallType.unary
    )

    public static let revokeInvitation = GRPCMethodDescriptor(
      name: "RevokeInvitation",
      path: "/global_admin.GlobalAdmin/RevokeInvitation",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol GlobalAdmin_GlobalAdminProvider: CallHandlerProvider {
  var interceptors: GlobalAdmin_GlobalAdminServerInterceptorFactoryProtocol? { get }

  func getAccounts(request: GlobalAdmin__GetAccountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__GetAccountsResponse>

  func getInvitationsForUser(request: GlobalAdmin__GetInvitationsForUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__GetInvitationsForUserResponse>

  func getAccountSessionToken(request: GlobalAdmin__GetAccountSessionTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__GetAccountSessionTokenResponse>

  func removeMember(request: GlobalAdmin__RemoveMemberRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__RemoveMemberResponse>

  func listMembers(request: GlobalAdmin__ListMembersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__ListMembersResponse>

  func getEndpointsForAccount(request: GlobalAdmin__GetEndpointsForAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__GetEndpointsForAccountResponse>

  func setAccountName(request: GlobalAdmin__SetAccountNameRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__SetAccountNameResponse>

  func inviteMember(request: GlobalAdmin__InviteMemberRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__InviteMemberResponse>

  func acceptInvitation(request: GlobalAdmin__AcceptInvitationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__AcceptInvitationResponse>

  func rejectInvitation(request: GlobalAdmin__RejectInvitationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__RejectInvitationResponse>

  func listInvitationsForAccount(request: GlobalAdmin__ListInvitationsForAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__ListInvitationsForAccountResponse>

  func revokeInvitation(request: GlobalAdmin__RevokeInvitationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<GlobalAdmin__RevokeInvitationResponse>
}

extension GlobalAdmin_GlobalAdminProvider {
  public var serviceName: Substring {
    return GlobalAdmin_GlobalAdminServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetAccounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetAccountsRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetAccountsResponse>(),
        interceptors: self.interceptors?.makeGetAccountsInterceptors() ?? [],
        userFunction: self.getAccounts(request:context:)
      )

    case "GetInvitationsForUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetInvitationsForUserRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetInvitationsForUserResponse>(),
        interceptors: self.interceptors?.makeGetInvitationsForUserInterceptors() ?? [],
        userFunction: self.getInvitationsForUser(request:context:)
      )

    case "GetAccountSessionToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetAccountSessionTokenRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetAccountSessionTokenResponse>(),
        interceptors: self.interceptors?.makeGetAccountSessionTokenInterceptors() ?? [],
        userFunction: self.getAccountSessionToken(request:context:)
      )

    case "RemoveMember":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RemoveMemberRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RemoveMemberResponse>(),
        interceptors: self.interceptors?.makeRemoveMemberInterceptors() ?? [],
        userFunction: self.removeMember(request:context:)
      )

    case "ListMembers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__ListMembersRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__ListMembersResponse>(),
        interceptors: self.interceptors?.makeListMembersInterceptors() ?? [],
        userFunction: self.listMembers(request:context:)
      )

    case "GetEndpointsForAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetEndpointsForAccountRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetEndpointsForAccountResponse>(),
        interceptors: self.interceptors?.makeGetEndpointsForAccountInterceptors() ?? [],
        userFunction: self.getEndpointsForAccount(request:context:)
      )

    case "SetAccountName":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__SetAccountNameRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__SetAccountNameResponse>(),
        interceptors: self.interceptors?.makeSetAccountNameInterceptors() ?? [],
        userFunction: self.setAccountName(request:context:)
      )

    case "InviteMember":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__InviteMemberRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__InviteMemberResponse>(),
        interceptors: self.interceptors?.makeInviteMemberInterceptors() ?? [],
        userFunction: self.inviteMember(request:context:)
      )

    case "AcceptInvitation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__AcceptInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__AcceptInvitationResponse>(),
        interceptors: self.interceptors?.makeAcceptInvitationInterceptors() ?? [],
        userFunction: self.acceptInvitation(request:context:)
      )

    case "RejectInvitation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RejectInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RejectInvitationResponse>(),
        interceptors: self.interceptors?.makeRejectInvitationInterceptors() ?? [],
        userFunction: self.rejectInvitation(request:context:)
      )

    case "ListInvitationsForAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__ListInvitationsForAccountRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__ListInvitationsForAccountResponse>(),
        interceptors: self.interceptors?.makeListInvitationsForAccountInterceptors() ?? [],
        userFunction: self.listInvitationsForAccount(request:context:)
      )

    case "RevokeInvitation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RevokeInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RevokeInvitationResponse>(),
        interceptors: self.interceptors?.makeRevokeInvitationInterceptors() ?? [],
        userFunction: self.revokeInvitation(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol GlobalAdmin_GlobalAdminAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: GlobalAdmin_GlobalAdminServerInterceptorFactoryProtocol? { get }

  func getAccounts(
    request: GlobalAdmin__GetAccountsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__GetAccountsResponse

  func getInvitationsForUser(
    request: GlobalAdmin__GetInvitationsForUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__GetInvitationsForUserResponse

  func getAccountSessionToken(
    request: GlobalAdmin__GetAccountSessionTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__GetAccountSessionTokenResponse

  func removeMember(
    request: GlobalAdmin__RemoveMemberRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__RemoveMemberResponse

  func listMembers(
    request: GlobalAdmin__ListMembersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__ListMembersResponse

  func getEndpointsForAccount(
    request: GlobalAdmin__GetEndpointsForAccountRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__GetEndpointsForAccountResponse

  func setAccountName(
    request: GlobalAdmin__SetAccountNameRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__SetAccountNameResponse

  func inviteMember(
    request: GlobalAdmin__InviteMemberRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__InviteMemberResponse

  func acceptInvitation(
    request: GlobalAdmin__AcceptInvitationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__AcceptInvitationResponse

  func rejectInvitation(
    request: GlobalAdmin__RejectInvitationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__RejectInvitationResponse

  func listInvitationsForAccount(
    request: GlobalAdmin__ListInvitationsForAccountRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__ListInvitationsForAccountResponse

  func revokeInvitation(
    request: GlobalAdmin__RevokeInvitationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> GlobalAdmin__RevokeInvitationResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension GlobalAdmin_GlobalAdminAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return GlobalAdmin_GlobalAdminServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return GlobalAdmin_GlobalAdminServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: GlobalAdmin_GlobalAdminServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetAccounts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetAccountsRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetAccountsResponse>(),
        interceptors: self.interceptors?.makeGetAccountsInterceptors() ?? [],
        wrapping: { try await self.getAccounts(request: $0, context: $1) }
      )

    case "GetInvitationsForUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetInvitationsForUserRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetInvitationsForUserResponse>(),
        interceptors: self.interceptors?.makeGetInvitationsForUserInterceptors() ?? [],
        wrapping: { try await self.getInvitationsForUser(request: $0, context: $1) }
      )

    case "GetAccountSessionToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetAccountSessionTokenRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetAccountSessionTokenResponse>(),
        interceptors: self.interceptors?.makeGetAccountSessionTokenInterceptors() ?? [],
        wrapping: { try await self.getAccountSessionToken(request: $0, context: $1) }
      )

    case "RemoveMember":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RemoveMemberRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RemoveMemberResponse>(),
        interceptors: self.interceptors?.makeRemoveMemberInterceptors() ?? [],
        wrapping: { try await self.removeMember(request: $0, context: $1) }
      )

    case "ListMembers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__ListMembersRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__ListMembersResponse>(),
        interceptors: self.interceptors?.makeListMembersInterceptors() ?? [],
        wrapping: { try await self.listMembers(request: $0, context: $1) }
      )

    case "GetEndpointsForAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__GetEndpointsForAccountRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__GetEndpointsForAccountResponse>(),
        interceptors: self.interceptors?.makeGetEndpointsForAccountInterceptors() ?? [],
        wrapping: { try await self.getEndpointsForAccount(request: $0, context: $1) }
      )

    case "SetAccountName":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__SetAccountNameRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__SetAccountNameResponse>(),
        interceptors: self.interceptors?.makeSetAccountNameInterceptors() ?? [],
        wrapping: { try await self.setAccountName(request: $0, context: $1) }
      )

    case "InviteMember":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__InviteMemberRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__InviteMemberResponse>(),
        interceptors: self.interceptors?.makeInviteMemberInterceptors() ?? [],
        wrapping: { try await self.inviteMember(request: $0, context: $1) }
      )

    case "AcceptInvitation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__AcceptInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__AcceptInvitationResponse>(),
        interceptors: self.interceptors?.makeAcceptInvitationInterceptors() ?? [],
        wrapping: { try await self.acceptInvitation(request: $0, context: $1) }
      )

    case "RejectInvitation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RejectInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RejectInvitationResponse>(),
        interceptors: self.interceptors?.makeRejectInvitationInterceptors() ?? [],
        wrapping: { try await self.rejectInvitation(request: $0, context: $1) }
      )

    case "ListInvitationsForAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__ListInvitationsForAccountRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__ListInvitationsForAccountResponse>(),
        interceptors: self.interceptors?.makeListInvitationsForAccountInterceptors() ?? [],
        wrapping: { try await self.listInvitationsForAccount(request: $0, context: $1) }
      )

    case "RevokeInvitation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<GlobalAdmin__RevokeInvitationRequest>(),
        responseSerializer: ProtobufSerializer<GlobalAdmin__RevokeInvitationResponse>(),
        interceptors: self.interceptors?.makeRevokeInvitationInterceptors() ?? [],
        wrapping: { try await self.revokeInvitation(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

public protocol GlobalAdmin_GlobalAdminServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'getAccounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccountsInterceptors() -> [ServerInterceptor<GlobalAdmin__GetAccountsRequest, GlobalAdmin__GetAccountsResponse>]

  /// - Returns: Interceptors to use when handling 'getInvitationsForUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInvitationsForUserInterceptors() -> [ServerInterceptor<GlobalAdmin__GetInvitationsForUserRequest, GlobalAdmin__GetInvitationsForUserResponse>]

  /// - Returns: Interceptors to use when handling 'getAccountSessionToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccountSessionTokenInterceptors() -> [ServerInterceptor<GlobalAdmin__GetAccountSessionTokenRequest, GlobalAdmin__GetAccountSessionTokenResponse>]

  /// - Returns: Interceptors to use when handling 'removeMember'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveMemberInterceptors() -> [ServerInterceptor<GlobalAdmin__RemoveMemberRequest, GlobalAdmin__RemoveMemberResponse>]

  /// - Returns: Interceptors to use when handling 'listMembers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListMembersInterceptors() -> [ServerInterceptor<GlobalAdmin__ListMembersRequest, GlobalAdmin__ListMembersResponse>]

  /// - Returns: Interceptors to use when handling 'getEndpointsForAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetEndpointsForAccountInterceptors() -> [ServerInterceptor<GlobalAdmin__GetEndpointsForAccountRequest, GlobalAdmin__GetEndpointsForAccountResponse>]

  /// - Returns: Interceptors to use when handling 'setAccountName'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetAccountNameInterceptors() -> [ServerInterceptor<GlobalAdmin__SetAccountNameRequest, GlobalAdmin__SetAccountNameResponse>]

  /// - Returns: Interceptors to use when handling 'inviteMember'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInviteMemberInterceptors() -> [ServerInterceptor<GlobalAdmin__InviteMemberRequest, GlobalAdmin__InviteMemberResponse>]

  /// - Returns: Interceptors to use when handling 'acceptInvitation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAcceptInvitationInterceptors() -> [ServerInterceptor<GlobalAdmin__AcceptInvitationRequest, GlobalAdmin__AcceptInvitationResponse>]

  /// - Returns: Interceptors to use when handling 'rejectInvitation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRejectInvitationInterceptors() -> [ServerInterceptor<GlobalAdmin__RejectInvitationRequest, GlobalAdmin__RejectInvitationResponse>]

  /// - Returns: Interceptors to use when handling 'listInvitationsForAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListInvitationsForAccountInterceptors() -> [ServerInterceptor<GlobalAdmin__ListInvitationsForAccountRequest, GlobalAdmin__ListInvitationsForAccountResponse>]

  /// - Returns: Interceptors to use when handling 'revokeInvitation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRevokeInvitationInterceptors() -> [ServerInterceptor<GlobalAdmin__RevokeInvitationRequest, GlobalAdmin__RevokeInvitationResponse>]
}

public enum GlobalAdmin_GlobalAdminServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "GlobalAdmin",
    fullName: "global_admin.GlobalAdmin",
    methods: [
      GlobalAdmin_GlobalAdminServerMetadata.Methods.getAccounts,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.getInvitationsForUser,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.getAccountSessionToken,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.removeMember,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.listMembers,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.getEndpointsForAccount,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.setAccountName,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.inviteMember,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.acceptInvitation,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.rejectInvitation,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.listInvitationsForAccount,
      GlobalAdmin_GlobalAdminServerMetadata.Methods.revokeInvitation,
    ]
  )

  public enum Methods {
    public static let getAccounts = GRPCMethodDescriptor(
      name: "GetAccounts",
      path: "/global_admin.GlobalAdmin/GetAccounts",
      type: GRPCCallType.unary
    )

    public static let getInvitationsForUser = GRPCMethodDescriptor(
      name: "GetInvitationsForUser",
      path: "/global_admin.GlobalAdmin/GetInvitationsForUser",
      type: GRPCCallType.unary
    )

    public static let getAccountSessionToken = GRPCMethodDescriptor(
      name: "GetAccountSessionToken",
      path: "/global_admin.GlobalAdmin/GetAccountSessionToken",
      type: GRPCCallType.unary
    )

    public static let removeMember = GRPCMethodDescriptor(
      name: "RemoveMember",
      path: "/global_admin.GlobalAdmin/RemoveMember",
      type: GRPCCallType.unary
    )

    public static let listMembers = GRPCMethodDescriptor(
      name: "ListMembers",
      path: "/global_admin.GlobalAdmin/ListMembers",
      type: GRPCCallType.unary
    )

    public static let getEndpointsForAccount = GRPCMethodDescriptor(
      name: "GetEndpointsForAccount",
      path: "/global_admin.GlobalAdmin/GetEndpointsForAccount",
      type: GRPCCallType.unary
    )

    public static let setAccountName = GRPCMethodDescriptor(
      name: "SetAccountName",
      path: "/global_admin.GlobalAdmin/SetAccountName",
      type: GRPCCallType.unary
    )

    public static let inviteMember = GRPCMethodDescriptor(
      name: "InviteMember",
      path: "/global_admin.GlobalAdmin/InviteMember",
      type: GRPCCallType.unary
    )

    public static let acceptInvitation = GRPCMethodDescriptor(
      name: "AcceptInvitation",
      path: "/global_admin.GlobalAdmin/AcceptInvitation",
      type: GRPCCallType.unary
    )

    public static let rejectInvitation = GRPCMethodDescriptor(
      name: "RejectInvitation",
      path: "/global_admin.GlobalAdmin/RejectInvitation",
      type: GRPCCallType.unary
    )

    public static let listInvitationsForAccount = GRPCMethodDescriptor(
      name: "ListInvitationsForAccount",
      path: "/global_admin.GlobalAdmin/ListInvitationsForAccount",
      type: GRPCCallType.unary
    )

    public static let revokeInvitation = GRPCMethodDescriptor(
      name: "RevokeInvitation",
      path: "/global_admin.GlobalAdmin/RevokeInvitation",
      type: GRPCCallType.unary
    )
  }
}
